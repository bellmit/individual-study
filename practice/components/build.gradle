// 声明gardle脚本自身所需要使用的资源，包括依赖项、maven仓库地址、第三方插件等
buildscript {

    ext {
        springBootVersion = '2.0.4.RELEASE'
        springCloudVersion = 'Finchley.SR4'
    }

    repositories {
        // maven 本地仓库
        mavenLocal()
        // 添加 Maven 仓库
        maven { url 'https://maven.aliyun.com/nexus/content/groups/htm' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "cn.gyw.platform:mbg-gradle-plugin:1.0.0"
    }

//    jar {
//        manifest.attributes provider: 'gradle'
//    }
}

// 所有模块共享配置
allprojects { Project project ->
    apply plugin: 'idea'

    group 'cn.gyw.components'
    version '1.0.0'

}

// 设定所有子模块共享的配置
subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    // JVM 版本号要求
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    repositories {
        // maven 本地仓库
        mavenLocal()
        // 添加 Maven 仓库
        maven {
            url 'https://maven.aliyun.com/nexus/content/groups/htm'
        }
        mavenCentral()
    }

    publishing {
        // 配置maven-publishing插件的输出物
        publications {
            maven(MavenPublication) {
                //指定group/artifact/version信息，可以不填。默认使用项目group/name/version作为groupId/artifactId/version
                groupId project.group
                artifactId project.name
                version project.version
                // 如果是war包填写components.web，如果是jar包填写components.java
                from components.java
            }
        }
        // 配置maven-publishing仓库的信息，即输出目的地
        repositories {
            maven {
                url = 'D:/'
            }
        }
    }

    // publishToMavenLocal是maven-publish插件自动创建的的一个任务，
    task jarToLocalMaven(dependsOn: publishToMavenLocal) {
        doLast {
            println "publish jar to ${userHome}/.m2/repository"
        }
    }
}