/*Projects 和 tasks
projects 和 tasks是 Gradle 中最重要的两个概念。
任何一个 Gradle 构建都是由一个或多个 projects 组成。每个 project 包括许多可构建组成部分。
这完全取决于你要构建些什么。举个例子，每个 project 或许是一个 jar 包或者一个 web 应用，
它也可以是一个由许多其他项目中产生的 jar 构成的 zip 压缩包。一个 project 不必描述它只能进行构建操作。
它也可以部署你的应用或搭建你的环境。不要担心它像听上去的那样庞大。
Gradle 的 build-by-convention 可以让您来具体定义一个 project 到底该做什么。
每个 project 都由多个 tasks 组成。每个 task 都代表了构建执行过程中的一个原子性操作。
如编译，打包，生成 javadoc，发布到某个仓库等操作。
*/

// 1.应用 java 插件
plugins {
/*

- By applying the Java Plugin, you get a whole host of features:
A compileJava task that compiles all the Java source files under src/main/java
A compileTestJava task for source files under src/test/java
A test task that runs the tests from src/test/java
A jar task that packages the main compiled classes and resources from src/main/resources into a single JAR named <project>-<version>.jar
A javadoc task that generates Javadoc for the main classes
- */
id 'java'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
version = '1.0.0'

// 外部依赖仓库
repositories {
    /*
    1、设置MAVEN的仓库位置 <localRepository>XXX</localRepository>
    2、设置gradle本地仓库位置（和MAVEN共用），打开系统环境变量 GRADLE_USER_HOME：XXX
    3、设置gradle发布到本地库 将maven的配置文件settings.xml移到USER_HOME/.m2目录下
     */

    // maven 本地仓库
    mavenLocal()
    // 添加 Maven 仓库
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }

}

// 依赖
/*
compileOnly —
    for dependencies that are necessary to compile your production code but shouldn’t be part of the runtime classpath
    由java插件提供,适用于编译期需要而不需要打包的情况
implementation (supersedes compile) —
    used for compilation and runtime 3.4以后由java-library提供 当其他模块依赖此模块时，
    此模块使用implementation声明的依赖包只限于模块内部使用，不允许其他模块使用。
runtimeOnly (supersedes runtime) — only used at runtime, not for compilation
testCompileOnly — same as compileOnly except it’s for the tests
testImplementation — test equivalent of implementation
testRuntimeOnly — test equivalent of runtimeOnly
 */
dependencies {
//    implementation group: 'org.springframework', name: 'spring-webmvc', version: '5.1.2.RELEASE'
//    implementation group: 'org.springframework', name: 'spring-context', version: '5.1.2.RELEASE'
//    testCompileOnly group: 'junit', name: 'junit', version: '4.+'
}
