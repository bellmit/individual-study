plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

apply plugin: 'cn.gyw.platform.plugin.mbg'

// 文件隔离
sourceSets {

}

dependencies {
    implementation project(':facade:system-service-api')
    implementation project(':components:security')
    implementation project(':components:common-web')

    // 公共模块依赖
    implementation platform_configuration
    implementation platform_common

    implementation spring_boot_starter
    implementation spring_boot_starter_web
    implementation spring_boot_starter_security
    implementation spring_boot_starter_jdbc
    implementation spring_boot_starter_data_redis
    // 打包时使用provide
//    providedRuntime spring_boot_starter_tomcat
    // 本地运行，否则异常：
//    implementation spring_boot_starter_tomcat
    implementation spring_boot_devtools
    implementation(mapper_spring_boot_starter) {
        exclude group: 'javax.persistence', module: 'persistence-api'
    }
//    implementation mapper_spring_boot_starter
    implementation pagehelper_spring_boot_starter
    implementation pagehelper

    // 时间插件：Mybatis对Java 8 time (JSR 310)支持
    implementation 'org.mybatis:mybatis-typehandlers-jsr310:1.0.2'
    // eurake 注册
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
    // avoid NullPointerException
    implementation(javax_persistence) {
        force = true
    }
    implementation mysql_connector_java
    implementation hutool_all

    testImplementation(spring_boot_starter_test) {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

// 不设置，使用默认值
mbg {
    skip = true
    // 是否覆盖已经生成的xml或者代码
    overwrite = true
    consoleable = true
    generatorFile = "generatorConfig.xml"
//    tableNames = "admin"
    allTable = false
    jdbc {
        driver = "com.mysql.jdbc.Driver"
//        url = "jdbc:mysql://127.0.0.1:3306/c_system?useSSL=false&allowPublicKeyRetrieval=true"
        url    = "jdbc:mysql://192.168.1.181:3306/c_system?useSSL=false&allowPublicKeyRetrieval=true"
        username = "root"
        password = "root"
    }
    xml {
        mapperPackage = "cn.gyw.backend.system.dao"
        modelPackage = "cn.gyw.backend.system.model.entity"
        mapperMapper = "cn.gyw.components.web.base.mgb.BaseDao"
        xmlPackage = "mappers"
        tableName = "role"
        objectName = "Role"
        mapperSuffix = "Mapper"
    }
    ftl {
        restControllerStyle = true
        entityPackage = "cn.gyw.backend.system.model.entity"
        entityDtoPackage = "cn.gyw.backend.system.model.dto"
        superServiceClass = "cn.gyw.components.web.base.mgb.BaseService"
        servicePackage = "cn.gyw.backend.system.service"
        superControllerClass = "cn.gyw.components.web.base.mgb.BaseController"
        controllerPackage = "cn.gyw.backend.system.controller"
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jar {
    manifest {
        attributes "Manifest-Version": 1.0,
            'Main-Class': 'cn.gyw.backend.system.SystemApiApplication'
    }
}