# 全局配置
server:
  servlet:
    context-path: /
  port: 8081

# spring 配置
spring:
  profiles: # 多环境配置
    active: local
  mvc: # 404 异常处理
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false
  devtools: # 热部署
    restart:
      enabled: true
      exclude: application.yml
  application: 
    name: system-service
  # 数据库配置
  datasource:
    username: root
    password: root
    dbcp2:
      validation-query: select 1
  jpa:
    database: mysql
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        hbm2ddl:
          auto: update
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        format_sql: true
        show_sql: true
    # redis配置
    # REDIS (RedisProperties)
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: 192.168.56.101
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: 123456
    # 连接超时时间（毫秒）
    timeout: 15000ms
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
  # RabbitMQ配置
  # rabbitmq相关配置
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    # 2. Thymeleaf 引擎
  # 启用缓存:建议生产开启
  thymeleaf:
    cache: false
    # 建议模版是否存在
    check-template-location: true
    # Content-Type 值 （无效）
    #spring.thymeleaf.content-type: text/htm
    # 是否启用
    enabled: true
    # 模版编码
    encoding: UTF-8
    # 应该从解析中排除的视图名称列表（用逗号分隔）
    excluded-view-names:
    # 模版模式
    mode: LEGACYHTML5
    # 模版存放路径
    prefix: classpath:/templates/
    # 模版后缀
    suffix: .htm

security:
  enabled: false
secure:
  ignored:
    urls: #安全路径白名单
      - /**/swagger-ui.html/**
      - /**/swagger-resources/**
      - /**/swagger/**
      - /**/v2/api-docs
      - /**/*.js
      - /**/*.css
      - /**/*.png
      - /**/*.ico
      - /webjars/springfox-swagger-ui/**
      - /actuator/**
      - /druid/**
      - /admin/login
      - /admin/register
      - /admin/info
      - /admin/logout

# 分布式ID服务接口调用
idserver:
  enable: false
  api: http://127.0.0.1:8086/idserver
  biz-tag: user-service

# 日志管理
# Spring Boot中默认配置了ERROR、WARN和INFO级别的日志输出到控制台。
#debug: true
# 文件输出
logging:
  config: classpath:logback.xml

# 文件上传配置
multipart:
  maxFileSize: 50Mb # 最大支持文件大小 即单个文件大小
  maxRequestSize: 50Mb  # 最大支持请求大小 即一次性上传的总文件大小

# mybatis xml 配置
mybatis:
  mapper-locations: mappers/*.xml

# eureka client config
eureka:
  client:
    # 是否启用eureka客户端。默认true
    enabled: false # 本地调试时，若不想启动eureka，可配置false
    serviceUrl: 
      defaultZone: http://localhost:9090/eureka/ # eureka服务的位置，如果需要注册多个服务器，可用逗号隔开
  instance: 
    preferIpAddress: false # 默认false, 是否以IP注册到Eureka Server上
    instanceId: ${spring.application.name}
    # 端点配置。若配置了context-path，actuator的监控端点会增加前缀，此时eureka也需要相应增加
    status-page-url-path: ${server.servlet.context-path}/info
    health-check-url-path: ${server.servlet.context-path}/health

jwt:
  tokenHeader: Authorization #JWT存储的请求头
  secret: backend-secret #JWT加解密使用的密钥
  expiration: 604800 #JWT的超期限时间(60*60*24*7)
  tokenHead: 'Bearer '  #JWT负载中拿到开头